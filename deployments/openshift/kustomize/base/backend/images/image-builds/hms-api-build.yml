apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  name: hms-api
  namespace: fd34fb-tools
spec:
  resources:
      limits:
        cpu: "2"
        memory: "8Gi"
  output:
    to:
      kind: ImageStreamTag
      name: 'hms-api:latest'
  source:
    type: Git
    git:
      ref: deploy-backend
      uri: https://github.com/bcgov/digital-talent.git
    contextDir: apps/backend
    dockerfile: |
      # Use the official Node.js 18 image.
      FROM node:18.17.0

      # Create and change to the app directory.
      WORKDIR /usr/src/app

      # Copy application dependency manifests to the container image.
      COPY package*.json ./

      # Install dependencies.
      RUN npm install

      # Copy local code to the container image.
      COPY . .
      RUN rm start.sh

      RUN npx prisma generate
      
      RUN npm run build
      RUN mkdir /.npm
      RUN chgrp -R 0 /.npm && chmod -R g=u /.npm

      # Copy the start.sh script to the Docker image.
      #COPY start.sh ./
      # Create and write the contents of start.sh in the container
      RUN echo "#!/bin/bash" >> start.sh && \
          echo "# push the schema to the database and sync the client" >> start.sh && \
          echo "npx prisma db push --schema='/usr/src/app/prisma/schema.prisma' --skip-generate " >> start.sh && \
          echo "" >> start.sh && \
          echo "# Start the application" >> start.sh && \
          echo "npm run start:prod" >> start.sh

      # Set execute permissions for the start.sh script.
      RUN chmod +x ./start.sh
      # Set ownership for the node_modules and dist directories.
      #RUN chown -R nodeuser:nodeuser /usr/src/app/node_modules
      # RUN chown -R nodeuser:nodeuser /usr/src/app/dist

      # Switch to the non-root user.
      #USER 1001

      # Expose port 4000
      EXPOSE 4000

      # Start the application
      CMD ["./start.sh"]





  strategy:
    type: Docker
