// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Classification Models
model Classification {
  id              String    @id @db.Uuid
  grid_id         String    @db.Uuid
  position_id     String    @db.Uuid
  rate_adjustment Decimal
  created_at      DateTime
  updated_at      DateTime?
  deleted_at      DateTime?

  grid     Grid     @relation(fields: [grid_id], references: [id])
  position Position @relation(fields: [position_id], references: [id])

  @@map("classification")
}

enum GridAffiliation {
  BCGEU
  MCCF
  PEA
}

model Grid {
  id          String          @id @db.Uuid
  affiliation GridAffiliation
  name        String          @unique
  steps       Json[]
  created_at  DateTime
  updated_at  DateTime?
  deleted_at  DateTime?

  classifications Classification[]

  @@map("grid")
}

enum PositionCategory {
  BAND
  AO
  IS
}

model Position {
  id          String           @id @db.Uuid
  category    PositionCategory
  name        String
  description String?
  created_at  DateTime
  updated_at  DateTime?
  deleted_at  DateTime?

  classifications Classification[]

  @@map("position")
}

// User Models
model User {
  id         String    @id @db.Uuid
  name       String?
  email      String?   @unique
  roles      String[]
  created_at DateTime
  updated_at DateTime?
  deleted_at DateTime?

  identities Identity[]

  @@map("user")
}

model Identity {
  sub               String
  identity_provider String
  user_id           String    @db.Uuid
  created_at        DateTime
  updated_at        DateTime?
  deleted_at        DateTime?

  user User @relation(fields: [user_id], references: [id])

  @@id([sub, identity_provider])
  @@map("identity")
}

model CompetitionSchedule {
  id         String           @id @db.Uuid
  //competition_id String           @unique @db.Uuid
  state      CompetitionState
  start_at   DateTime
  end_at     DateTime
  created_at DateTime
  updated_at DateTime?
  deleted_at DateTime?

  //competition Competition @relation(fields: [competition_id], references: [id])

  @@map("competition_schedule")
}

enum CompetitionState {
  DRAFT
  PUBLISHED
  INTAKE_PERIOD
  APPLICATION_PERIOD
  ASSESSMENT_PERIOD
  INTERVIEW_PERIOD
  OFFER_PERIOD
  CLOSED
  CANCELLED
}
